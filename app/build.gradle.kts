/*
 * This file was generated by the Gradle 'init' task.
 *
 * This generated file contains a sample Java application project to get you started.
 * For more details on building Java & JVM projects, please refer to https://docs.gradle.org/8.7/userguide/building_java_projects.html in the Gradle documentation.
 */

plugins {
    id ("application")
    id("org.openjfx.javafxplugin") version "0.1.0"  


}

repositories {
    mavenCentral()
}

dependencies {
    // Use JUnit Jupiter for testing.
    testImplementation(libs.junit.jupiter)
    implementation("org.eclipse.paho:org.eclipse.paho.client.mqttv3:1.2.5")
//logback y slf4j
implementation("org.slf4j:slf4j-api:1.0.7")
    implementation("ch.qos.logback:logback-classic:1.4.11")
   

    testRuntimeOnly("org.junit.platform:junit-platform-launcher")
      testRuntimeOnly("org.junit.platform:junit-platform-launcher:1.10.2")

    // This dependency is used by the application.
    implementation(libs.guava)

    // https://mvnrepository.com/artifact/org.projectlombok/lombok
	compileOnly ("org.projectlombok:lombok:1.18.32")
	annotationProcessor ("org.projectlombok:lombok:1.18.32")
	
	testCompileOnly ("org.projectlombok:lombok:1.18.32")
	testAnnotationProcessor ("org.projectlombok:lombok:1.18.32")

    

}

// Apply a specific Java toolchain to ease working on different environments.
java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(21)
    }
}

application {
    // Define the main class for the application.
  //  mainClass = "org.example.App"
        mainClass.set("org.example.App")

}

tasks.named<Test>("test") {
    // Use JUnit Platform for unit tests.
    useJUnitPlatform()
}

javafx {
    version = "21"
    modules = listOf("javafx.controls", "javafx.fxml", "javafx.media")
}

tasks.jar {
    manifest {
        attributes(
            "Main-Class" to application.mainClass.get()
        )
    }

    from({
        configurations.runtimeClasspath.get().filter { it.name.endsWith("jar") }.map { zipTree(it) }
    })

    from("src/main/resources") {
        into("/")
    }

    duplicatesStrategy = DuplicatesStrategy.EXCLUDE
}